# This file was autogenerated using `zio-sbt-ci` plugin via `sbt ciGenerateGithubWorkflow` 
# task and should be included in the git repository. Please do not edit it manually.

name: CI
env:
  JDK_JAVA_OPTIONS: -XX:+PrintCommandLineFlags -Xms2G -Xmx2G -Xss4M -XX:+UseG1GC
'on':
  workflow_dispatch: {}
  release:
    types:
    - published
  push:
    branches:
    - master
    - series/0.2.x
  pull_request:
    branches-ignore:
    - gh-pages
concurrency:
  group: ${{ github.workflow }}-${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && github.run_id || github.ref }}
  cancel-in-progress: true
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - name: Git Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: '0'
    - name: Install libuv
      run: sudo apt-get update && sudo apt-get install -y libuv1-dev
    - name: Setup Scala
      uses: actions/setup-java@v5
      with:
        distribution: corretto
        java-version: '21'
        check-latest: true
    - name: Setup SBT
      uses: sbt/setup-sbt@v1
    - name: Cache Dependencies
      uses: coursier/cache-action@v6
    - name: Check all code compiles
      run: sbt 'Test/compile; examples/compile'
    - name: Check artifacts build process
      run: sbt +publishLocal
    - name: Check website build process
      run: sbt docs/clean; sbt docs/buildWebsite
    - name: Adjust baseUrl in website build
      run: 'sed -i "s/baseUrl:.*/baseUrl: \"\/zio-pubsub\/\",/g" zio-pubsub-docs/target/website/docusaurus.config.js && sbt docs/buildWebsite'
    - name: Upload website build
      uses: actions/upload-pages-artifact@v3
      with:
        path: zio-pubsub-docs/target/website/build
  lint:
    name: Lint
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
    - name: Git Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: '0'
    - name: Install libuv
      run: sudo apt-get update && sudo apt-get install -y libuv1-dev
    - name: Setup Scala
      uses: actions/setup-java@v5
      with:
        distribution: corretto
        java-version: '21'
        check-latest: true
    - name: Setup SBT
      uses: sbt/setup-sbt@v1
    - name: Cache Dependencies
      uses: coursier/cache-action@v6
    - name: Check if the site workflow is up to date
      run: sbt ciCheckGithubWorkflow
    - name: Lint
      run: sbt lint
  test:
    name: Test
    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        java:
        - '21'
    steps:
    - name: Install libuv
      run: sudo apt-get update && sudo apt-get install -y libuv1-dev libidn2-dev libcurl3-dev
    - name: Setup Scala
      uses: actions/setup-java@v5
      with:
        distribution: corretto
        java-version: ${{ matrix.java }}
        check-latest: true
    - name: Setup SBT
      uses: sbt/setup-sbt@v1
    - name: Cache Dependencies
      uses: coursier/cache-action@v6
    - name: Git Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: '0'
    - name: Start up pubsub emulator
      run: docker compose up -d && until curl -s http://localhost:8085; do printf 'waiting for pubsub...'; sleep 1; done && echo "pubsub ready"
    - name: Test
      run: sbt +test
  update-readme:
    name: Update README
    runs-on: ubuntu-latest
    continue-on-error: false
    if: ${{ github.event_name == 'push' }}
    steps:
    - name: Git Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: '0'
    - name: Install libuv
      run: sudo apt-get update && sudo apt-get install -y libuv1-dev
    - name: Setup Scala
      uses: actions/setup-java@v5
      with:
        distribution: corretto
        java-version: '21'
        check-latest: true
    - name: Setup SBT
      uses: sbt/setup-sbt@v1
    - name: Cache Dependencies
      uses: coursier/cache-action@v6
    - name: Generate Readme
      run: sbt docs/generateReadme
    - name: Commit Changes
      run: |
        git config --local user.email "zio-assistant[bot]@users.noreply.github.com"
        git config --local user.name "ZIO Assistant"
        git add README.md
        git commit -m "Update README.md" || echo "No changes to commit"
    - name: Generate Token
      id: generate-token
      uses: zio/generate-github-app-token@v1.0.0
      with:
        app_id: ${{ secrets.APP_ID }}
        app_private_key: ${{ secrets.APP_PRIVATE_KEY }}
    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v7
      with:
        body: |-
          Autogenerated changes after running the `sbt docs/generateReadme` command of the [zio-sbt-website](https://zio.dev/zio-sbt) plugin.

          I will automatically update the README.md file whenever there is new change for README.md, e.g.
            - After each release, I will update the version in the installation section.
            - After any changes to the "docs/index.md" file, I will update the README.md file accordingly.
        branch: zio-sbt-website/update-readme
        commit-message: Update README.md
        token: ${{ steps.generate-token.outputs.token }}
        delete-branch: true
        title: Update README.md
    - name: Approve PR
      if: ${{ steps.cpr.outputs.pull-request-number }}
      run: gh pr review "$PR_URL" --approve
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_URL: ${{ steps.cpr.outputs.pull-request-url }}
    - name: Enable Auto-Merge
      if: ${{ steps.cpr.outputs.pull-request-number }}
      run: gh pr merge --auto --squash "$PR_URL" || gh pr merge --squash "$PR_URL"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_URL: ${{ steps.cpr.outputs.pull-request-url }}
  ci:
    name: ci
    runs-on: ubuntu-latest
    continue-on-error: false
    needs:
    - lint
    - test
    - build
    steps:
    - name: Report Successful CI
      run: echo "ci passed"
  release:
    name: Release
    runs-on: ubuntu-latest
    continue-on-error: false
    needs:
    - ci
    if: ${{ github.event_name != 'pull_request' }}
    steps:
    - name: Git Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: '0'
    - name: Install libuv
      run: sudo apt-get update && sudo apt-get install -y libuv1-dev
    - name: Setup Scala
      uses: actions/setup-java@v5
      with:
        distribution: corretto
        java-version: '21'
        check-latest: true
    - name: Setup SBT
      uses: sbt/setup-sbt@v1
    - name: Cache Dependencies
      uses: coursier/cache-action@v6
    - name: Release
      run: |-
        echo "$PGP_SECRET" | base64 -d -i - > /tmp/signing-key.gpg
        echo "$PGP_PASSPHRASE" | gpg --pinentry-mode loopback --passphrase-fd 0 --import /tmp/signing-key.gpg
        (echo "$PGP_PASSPHRASE"; echo; echo) | gpg --command-fd 0 --pinentry-mode loopback --change-passphrase $(gpg --list-secret-keys --with-colons 2> /dev/null | grep '^sec:' | cut --delimiter ':' --fields 5 | tail -n 1)
        sbt publish-all
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  deploy-website:
    name: Deploy website
    runs-on: ubuntu-latest
    continue-on-error: false
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs:
    - release
    steps:
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
